# Generated by Django 5.2.4 on 2025-08-20 18:11

import django.core.validators
import django.db.models.deletion
import uuid
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('app', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='DataQualityMetrics',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('metric_type', models.CharField(choices=[('COMPLETENESS', 'Data Completeness'), ('ACCURACY', 'Data Accuracy'), ('CONSISTENCY', 'Data Consistency'), ('VALIDITY', 'Data Validity'), ('UNIQUENESS', 'Data Uniqueness')], max_length=20)),
                ('metric_value', models.FloatField()),
                ('threshold_value', models.FloatField()),
                ('is_passing', models.BooleanField()),
                ('table_name', models.CharField(max_length=50)),
                ('column_name', models.CharField(blank=True, max_length=50)),
                ('date_checked', models.DateTimeField(auto_now_add=True)),
                ('record_count', models.PositiveIntegerField()),
                ('issue_count', models.PositiveIntegerField(default=0)),
                ('notes', models.TextField(blank=True)),
            ],
            options={
                'db_table': 'data_quality_metrics',
                'ordering': ['-date_checked'],
            },
        ),
        migrations.CreateModel(
            name='ModelPerformance',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('model_version', models.CharField(max_length=50)),
                ('model_type', models.CharField(default='fraud_detector', max_length=50)),
                ('accuracy', models.FloatField(validators=[django.core.validators.MinValueValidator(0.0), django.core.validators.MaxValueValidator(1.0)])),
                ('precision', models.FloatField(validators=[django.core.validators.MinValueValidator(0.0), django.core.validators.MaxValueValidator(1.0)])),
                ('recall', models.FloatField(validators=[django.core.validators.MinValueValidator(0.0), django.core.validators.MaxValueValidator(1.0)])),
                ('f1_score', models.FloatField(validators=[django.core.validators.MinValueValidator(0.0), django.core.validators.MaxValueValidator(1.0)])),
                ('auc_score', models.FloatField(blank=True, null=True, validators=[django.core.validators.MinValueValidator(0.0), django.core.validators.MaxValueValidator(1.0)])),
                ('total_predictions', models.PositiveIntegerField()),
                ('true_positives', models.PositiveIntegerField()),
                ('true_negatives', models.PositiveIntegerField()),
                ('false_positives', models.PositiveIntegerField()),
                ('false_negatives', models.PositiveIntegerField()),
                ('training_data_size', models.PositiveIntegerField(blank=True, null=True)),
                ('training_time', models.FloatField(blank=True, null=True)),
                ('feature_count', models.PositiveIntegerField(blank=True, null=True)),
                ('date_evaluated', models.DateTimeField(auto_now_add=True)),
                ('date_deployed', models.DateTimeField(blank=True, null=True)),
                ('is_active', models.BooleanField(default=False)),
                ('notes', models.TextField(blank=True)),
                ('evaluation_dataset', models.CharField(blank=True, max_length=100)),
            ],
            options={
                'db_table': 'model_performance',
                'ordering': ['-date_evaluated'],
            },
        ),
        migrations.CreateModel(
            name='PredictionBatch',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('batch_id', models.UUIDField(default=uuid.uuid4, unique=True)),
                ('name', models.CharField(max_length=200)),
                ('description', models.TextField(blank=True)),
                ('status', models.CharField(choices=[('PENDING', 'Pending'), ('PROCESSING', 'Processing'), ('COMPLETED', 'Completed'), ('FAILED', 'Failed'), ('CANCELLED', 'Cancelled')], default='PENDING', max_length=20)),
                ('total_jobs', models.PositiveIntegerField(default=0)),
                ('processed_jobs', models.PositiveIntegerField(default=0)),
                ('failed_jobs', models.PositiveIntegerField(default=0)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('started_at', models.DateTimeField(blank=True, null=True)),
                ('completed_at', models.DateTimeField(blank=True, null=True)),
                ('model_version', models.CharField(default='latest', max_length=50)),
                ('fraud_detected', models.PositiveIntegerField(default=0)),
                ('avg_confidence', models.FloatField(blank=True, null=True)),
                ('error_message', models.TextField(blank=True)),
            ],
            options={
                'db_table': 'prediction_batches',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='UserFeedback',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('feedback_type', models.CharField(choices=[('CORRECTION', 'Fraud Classification Correction'), ('QUALITY', 'Prediction Quality Rating'), ('FEATURE', 'Feature Importance Feedback'), ('GENERAL', 'General Feedback')], max_length=20)),
                ('user_correction', models.BooleanField(blank=True, help_text="User's correction: True if fraud, False if legitimate", null=True)),
                ('agreement_level', models.CharField(blank=True, choices=[('STRONGLY_AGREE', 'Strongly Agree'), ('AGREE', 'Agree'), ('NEUTRAL', 'Neutral'), ('DISAGREE', 'Disagree'), ('STRONGLY_DISAGREE', 'Strongly Disagree')], max_length=20, null=True)),
                ('confidence_rating', models.IntegerField(blank=True, choices=[(1, '1 Star'), (2, '2 Stars'), (3, '3 Stars'), (4, '4 Stars'), (5, '5 Stars')], help_text='User confidence in their correction (1-5 stars)', null=True)),
                ('feedback_reason', models.TextField(blank=True, help_text='Why the user thinks the prediction is wrong')),
                ('specific_issues', models.JSONField(blank=True, default=list, help_text='Specific issues identified by user')),
                ('ip_address', models.GenericIPAddressField()),
                ('user_agent', models.TextField(blank=True)),
                ('session_id', models.CharField(blank=True, max_length=100)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('is_processed', models.BooleanField(default=False)),
                ('processed_at', models.DateTimeField(blank=True, null=True)),
                ('is_spam', models.BooleanField(default=False)),
                ('is_helpful', models.BooleanField(blank=True, null=True)),
            ],
            options={
                'db_table': 'user_feedback',
                'ordering': ['-created_at'],
            },
        ),
        migrations.AddField(
            model_name='fraudprediction',
            name='entropy',
            field=models.FloatField(blank=True, null=True),
        ),
        migrations.AddField(
            model_name='fraudprediction',
            name='feature_scores',
            field=models.JSONField(blank=True, default=dict),
        ),
        migrations.AddField(
            model_name='fraudprediction',
            name='is_verified',
            field=models.BooleanField(default=False),
        ),
        migrations.AddField(
            model_name='fraudprediction',
            name='metadata_confidence',
            field=models.FloatField(blank=True, null=True),
        ),
        migrations.AddField(
            model_name='fraudprediction',
            name='model_version',
            field=models.CharField(default='v1.0', max_length=50),
        ),
        migrations.AddField(
            model_name='fraudprediction',
            name='prediction_method',
            field=models.CharField(choices=[('RULE_BASED', 'Rule-based Algorithm'), ('ML_MODEL', 'Machine Learning Model'), ('ENSEMBLE', 'Ensemble Method'), ('DEEP_LEARNING', 'Deep Learning Model'), ('HYBRID', 'Hybrid Approach')], default='RULE_BASED', max_length=20),
        ),
        migrations.AddField(
            model_name='fraudprediction',
            name='prediction_variance',
            field=models.FloatField(blank=True, null=True),
        ),
        migrations.AddField(
            model_name='fraudprediction',
            name='processing_time',
            field=models.FloatField(blank=True, help_text='Processing time in seconds', null=True),
        ),
        migrations.AddField(
            model_name='fraudprediction',
            name='sentiment_confidence',
            field=models.FloatField(blank=True, null=True),
        ),
        migrations.AddField(
            model_name='fraudprediction',
            name='text_confidence',
            field=models.FloatField(blank=True, null=True),
        ),
        migrations.AddField(
            model_name='fraudprediction',
            name='verified_at',
            field=models.DateTimeField(blank=True, null=True),
        ),
        migrations.AddField(
            model_name='fraudprediction',
            name='verified_by',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='verified_predictions', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='jobposting',
            name='character_count',
            field=models.PositiveIntegerField(blank=True, null=True),
        ),
        migrations.AddField(
            model_name='jobposting',
            name='data_source',
            field=models.CharField(choices=[('CSV', 'Original CSV Dataset'), ('USER', 'User Submitted'), ('API', 'API Submission'), ('BULK', 'Bulk Upload'), ('SCRAPER', 'Web Scraper')], default='USER', max_length=20),
        ),
        migrations.AddField(
            model_name='jobposting',
            name='deleted_at',
            field=models.DateTimeField(blank=True, null=True),
        ),
        migrations.AddField(
            model_name='jobposting',
            name='description_quality_score',
            field=models.FloatField(blank=True, null=True, validators=[django.core.validators.MinValueValidator(0.0), django.core.validators.MaxValueValidator(1.0)]),
        ),
        migrations.AddField(
            model_name='jobposting',
            name='email_count',
            field=models.PositiveIntegerField(default=0),
        ),
        migrations.AddField(
            model_name='jobposting',
            name='has_company_website',
            field=models.BooleanField(default=False),
        ),
        migrations.AddField(
            model_name='jobposting',
            name='has_contact_info',
            field=models.BooleanField(default=False),
        ),
        migrations.AddField(
            model_name='jobposting',
            name='has_specific_requirements',
            field=models.BooleanField(default=False),
        ),
        migrations.AddField(
            model_name='jobposting',
            name='ip_address',
            field=models.GenericIPAddressField(blank=True, null=True),
        ),
        migrations.AddField(
            model_name='jobposting',
            name='is_deleted',
            field=models.BooleanField(default=False),
        ),
        migrations.AddField(
            model_name='jobposting',
            name='phone_count',
            field=models.PositiveIntegerField(default=0),
        ),
        migrations.AddField(
            model_name='jobposting',
            name='session_id',
            field=models.CharField(blank=True, max_length=100, null=True),
        ),
        migrations.AddField(
            model_name='jobposting',
            name='url_count',
            field=models.PositiveIntegerField(default=0),
        ),
        migrations.AddField(
            model_name='jobposting',
            name='user_agent',
            field=models.TextField(blank=True, null=True),
        ),
        migrations.AddField(
            model_name='jobposting',
            name='word_count',
            field=models.PositiveIntegerField(blank=True, null=True),
        ),
        migrations.AddIndex(
            model_name='fraudprediction',
            index=models.Index(fields=['is_fraudulent'], name='fraud_predi_is_frau_8e46f7_idx'),
        ),
        migrations.AddIndex(
            model_name='fraudprediction',
            index=models.Index(fields=['risk_level'], name='fraud_predi_risk_le_bdfc68_idx'),
        ),
        migrations.AddIndex(
            model_name='fraudprediction',
            index=models.Index(fields=['model_version'], name='fraud_predi_model_v_546b82_idx'),
        ),
        migrations.AddIndex(
            model_name='fraudprediction',
            index=models.Index(fields=['created_at'], name='fraud_predi_created_0ad29d_idx'),
        ),
        migrations.AddIndex(
            model_name='fraudprediction',
            index=models.Index(fields=['is_verified'], name='fraud_predi_is_veri_1b9299_idx'),
        ),
        migrations.AddIndex(
            model_name='jobposting',
            index=models.Index(fields=['data_source'], name='job_posting_data_so_25cc29_idx'),
        ),
        migrations.AddIndex(
            model_name='jobposting',
            index=models.Index(fields=['created_at'], name='job_posting_created_cb6fcb_idx'),
        ),
        migrations.AddIndex(
            model_name='jobposting',
            index=models.Index(fields=['industry'], name='job_posting_industr_5d3422_idx'),
        ),
        migrations.AddIndex(
            model_name='jobposting',
            index=models.Index(fields=['employment_type'], name='job_posting_employm_ba83c2_idx'),
        ),
        migrations.AddIndex(
            model_name='jobposting',
            index=models.Index(fields=['-created_at', 'data_source'], name='job_posting_created_863fce_idx'),
        ),
        migrations.AddIndex(
            model_name='modelperformance',
            index=models.Index(fields=['model_version'], name='model_perfo_model_v_4d63e8_idx'),
        ),
        migrations.AddIndex(
            model_name='modelperformance',
            index=models.Index(fields=['is_active'], name='model_perfo_is_acti_9905c3_idx'),
        ),
        migrations.AddIndex(
            model_name='modelperformance',
            index=models.Index(fields=['date_evaluated'], name='model_perfo_date_ev_5fbf61_idx'),
        ),
        migrations.AddField(
            model_name='userfeedback',
            name='prediction',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='user_feedback', to='app.fraudprediction'),
        ),
        migrations.AddField(
            model_name='userfeedback',
            name='user',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='fraud_feedback', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddIndex(
            model_name='userfeedback',
            index=models.Index(fields=['feedback_type'], name='user_feedba_feedbac_36edfb_idx'),
        ),
        migrations.AddIndex(
            model_name='userfeedback',
            index=models.Index(fields=['is_processed'], name='user_feedba_is_proc_b86d65_idx'),
        ),
        migrations.AddIndex(
            model_name='userfeedback',
            index=models.Index(fields=['created_at'], name='user_feedba_created_1f96f0_idx'),
        ),
        migrations.AddIndex(
            model_name='userfeedback',
            index=models.Index(fields=['user_correction'], name='user_feedba_user_co_342040_idx'),
        ),
    ]
